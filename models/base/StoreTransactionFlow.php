<?php
// This class was automatically generated by a giiant build task
// You should not change it manually as it will be overwritten on next build

namespace d3yii2\d3store\models\base;

use Yii;

/**
 * This is the base-model class for table "store_transaction_flow".
 *
 * @property string $id
 * @property string $prev_tran_id
 * @property string $next_tran_id
 * @property string $quantity
 *
 * @property \d3yii2\d3store\models\StoreTransactions $nextTran
 * @property \d3yii2\d3store\models\StoreTransactions $prevTran
 * @property string $aliasModel
 */
abstract class StoreTransactionFlow extends \yii\db\ActiveRecord
{



    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'store_transaction_flow';
    }


    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['prev_tran_id'], 'required'],
            [['prev_tran_id', 'next_tran_id'], 'integer'],
            [['quantity'], 'number'],
            [['next_tran_id'], 'exist', 'skipOnError' => true, 'targetClass' => \d3yii2\d3store\models\StoreTransactions::className(), 'targetAttribute' => ['next_tran_id' => 'id']],
            [['prev_tran_id'], 'exist', 'skipOnError' => true, 'targetClass' => \d3yii2\d3store\models\StoreTransactions::className(), 'targetAttribute' => ['prev_tran_id' => 'id']]
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('d3store', 'ID'),
            'prev_tran_id' => Yii::t('d3store', 'Prev transaction'),
            'next_tran_id' => Yii::t('d3store', 'Next transaction'),
            'quantity' => Yii::t('d3store', 'Quantity'),
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getNextTran()
    {
        return $this->hasOne(\d3yii2\d3store\models\StoreTransactions::className(), ['id' => 'next_tran_id']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getPrevTran()
    {
        return $this->hasOne(\d3yii2\d3store\models\StoreTransactions::className(), ['id' => 'prev_tran_id']);
    }



    
    /**
     * @inheritdoc
     * @return \d3yii2\d3store\models\StoreTransactionFlowQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \d3yii2\d3store\models\StoreTransactionFlowQuery(get_called_class());
    }

}
